<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title><%= channel.title %> - わかめtube</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <meta name="description" content="<%= channel.description || channel.descriptionShort %>">
  <meta property="og:title" content="<%= channel.author.name %>'s Channel">
  <meta property="og:description" content="<%= channel.description || channel.descriptionShort || '' %>">
  <meta property="og:site_name" content="わかめtube | まっしろ">
  <meta property="og:image" content="<%= channel.author.bestAvatar.url.slice(21) %>">
  <meta name="theme-color" content="#ff8181">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="author" content="わかめtube | まっしろになっていく">

  <link rel="shortcut icon" href="<%= channel.author.bestAvatar.url.slice(21) %>">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/styles.css">

  <script src="/js/bootstrap.min.js"></script>

  <style>
    /* バナーと検索 */
    .banner {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100% !important;
    }
    .banner form {
      display: flex !important;
      flex: 1 !important;
      max-width: 600px;
    }
    #searchbox {
      border-radius: 40px 0 0 40px !important;
      width: 100% !important;
      flex: 1 !important;
    }
    .btn-search {
      border-radius: 0 40px 40px 0 !important;
      margin-left: -1px !important;
      background-color: #f8f8f8 !important;
    }

    /* ヘルプサイドバー */
    #a-help-sidebar {
      position: fixed;
      top: 0;
      left: -200px;
      width: 180px;
      background: #f8f9fa;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
      padding: 10px;
      transition: left 0.3s ease-in-out;
    }
    .menuristt {
      text-decoration: none;
    }

    /* ビデオカード */
    .video-card {
      width: 230px;
      margin: 6px;
      padding: 5px;
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s, box-shadow 0.3s;
    }
    .video-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    .thumbnail-container {
      position: relative;
      display: inline-block;
    }
    .video-thumbnail {
      width: 100%;
      aspect-ratio: 16 / 9;
      object-fit: cover;
      border-radius: 5px;
      display: block;
    }
    .video-duration {
      position: absolute;
      bottom: 5px;
      right: 5px;
      background: rgba(0, 0, 0, 0.7);
      color: white;
      padding: 2px 5px;
      font-size: 12px;
      font-weight: bold;
      border-radius: 3px;
    }
    .rVideoInfo h5 {
      display: -webkit-box;
      -webkit-line-clamp: 4;      /* 最大表示行数 */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      font-weight: bold;
    }
    
#acter-banner {
  width: 100%;
  aspect-ratio: 6 / 1;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  position: relative;
}


  #acter-info {
    display: flex;
    align-items: flex-end;
    gap: 20px;
    padding: 20px;
    margin-top: -10px; /* バナー画像に少し重ねる */
    background: rgba(255, 255, 255, 0.9); /* 半透明白背景で見やすくする */
    border-radius: 8px;
    max-width: 95%;
    margin-right: auto;
    }

  #acter-avatar {
    width: 96px;
    height: 96px;
    border-radius: 50%;
    border: 2px solid white;
  }

  #acter-meta {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  #acter-meta h1 {
    font-size: 1.8rem;
    margin: 0;
    font-weight: bold;
  }

  #acter-meta .subscribers,
  #acter-meta .videos {
    font-size: 1.1rem;
    color: #606060;
  }
.subscribersblock {
  font-size: 1.1rem;
  color: #000000;
  }
  #acter-meta .description {
    font-size: 1.05rem;
    color: #333;
    margin-top: 5px;
  }
.sub-info {
  display: flex;
  gap: 8px; /* 区切り文字や余白調整 */
  font-size: 1.1rem;
  color: #555;
  align-items: center;
}

.separator {
  color: #999;
}
    
#acter-meta h1 {
  font-size: 2.4rem;
  margin: 0;
  font-weight: bold;
}
.description-wrapper {
  position: relative;
  max-width: 100%;
}
.description.expanded {
  display: block;
  -webkit-line-clamp: unset;
  -webkit-box-orient: unset;
  overflow: visible;
  text-overflow: unset;
}


  </style>

  <script>
    function toggleHelpSidebar() {
      const sidebar = document.getElementById("a-help-sidebar");
      sidebar.style.left = (sidebar.style.left === "-200px" || sidebar.style.left === "") ? "0" : "-200px";
    }
  </script>
</head>
<body>
  <header>
    <div class="banner">
      <button class="btn btn-link" id="help-menu-btn" onclick="toggleHelpSidebar()">=</button>
      <button class="btn btn-link" onclick="window.location.href='/'">わかめtube</button>

      <div style="display: flex; flex: 1 !important; justify-content: center;">
        <form class="d-flex" action="/s" method="get">
          <input id="searchbox" name="q" class="form-control" type="text" placeholder="キーワードを入力..." aria-label="Search" required>
          <button type="submit" class="btn btn-search">
            <img src="https://raw.githubusercontent.com/siawaseok3/siawaseok3.github.io/refs/heads/main/%E6%A4%9C%E7%B4%A2%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.png" alt="検索" style="width: 20px; height: 20px;">
          </button>
        </form>
      </div>
    </div>

    <div id="a-help-sidebar" class="a-sidebar">
      <button class="btn btn-link menuristt" onclick="window.location.href='/send'">問い合わせ</button><br><br>
      <button class="btn btn-link menuristt" onclick="window.location.href='/blog/help'">ヘルプ</button><br><br>
      <button class="btn btn-link menuristt" onclick="toggleHelpSidebar()">閉じる</button>
    </div>
  </header>
  
<div id="acter-banner"></div>
<div id="acter-info">
  <img id="acter-avatar" src="" alt="チャンネルアイコン">
  <div id="acter-meta">
    <h1 id="acter-name"></h1>
    <div class="sub-info">
      <div class="subscribersblock" id="acter-handle"></div>
      <span class="separator"></span>
      <div class="subscribers" id="acter-subscribers"></div>
      <span class="separator">・</span>
      <div class="videos" id="acter-videos"></div>
    </div>
<div class="description-wrapper">
  <div class="description" id="acter-description"></div>
</div>
  </div>
</div>

  <div class="results">
    <% channel.items.forEach(video => { %>
      <div class="video-card">
        <a href="/w/<%= video.id %>" class="thumbnail-container">
          <img loading="lazy" src="/vi/<%= video.id %>/hqdefault.jpg" alt="<%= video.title %>" class="video-thumbnail">
          <span class="video-duration"><%= video.duration %></span>
        </a>
        <div class="rVideoInfo">
          <h5>
            <a href="/w/<%= video.id %>" style="text-decoration: none;"><%= video.title %></a><br>
          </h5>
          <!-- 
            <div class="channel-name"><%= video.author.name %></div> 
          -->
        </div>
      </div>
    <% }); %>
  </div>
  <div class="pagination">
    <% if (page > 1) { %>
      <a class="btn position-absolute" style="left: 0; color: white; background-color: #ff8181;" href="/c/<%= channel.id %>?p=<%= page - 1 %>">前のページ</a>
    <% } %>
    <a class="btn position-absolute" style="right: 0; color: white; background-color: #ff8181;" href="/c/<%= channel.id %>?p=<%= page + 1 %>">次のページ</a>
  </div>
<script>
async function loadActerInfo() {
  const channelId = location.pathname.split("/c/")[1];
  try {
    const res = await fetch(`/acterinfo/${channelId}`);
    if (!res.ok) throw new Error("取得失敗");

    const data = await res.json();

    document.getElementById("acter-banner").style.backgroundImage = `url('${data.banner}')`;
    document.getElementById("acter-avatar").src = data.avatar;
    document.getElementById("acter-name").textContent = data.title;
    document.getElementById("acter-handle").textContent = data.channelhandle;
    document.getElementById("acter-subscribers").textContent = `登録者数${data.subscribers}`;
    document.getElementById("acter-videos").textContent = `${data.videos}の動画`;
    document.getElementById("acter-description").textContent = data.description || "";

  } catch (e) {
    console.error("チャンネル情報の取得に失敗:", e);
    document.getElementById("acter-name").textContent = "チャンネル情報の取得に失敗しました";
  }
}

window.addEventListener("DOMContentLoaded", loadActerInfo);
</script>
</body>
</html>
